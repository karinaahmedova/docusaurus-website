(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[729],{3905:function(e,r,t){"use strict";t.d(r,{Zo:function(){return l},kt:function(){return m}});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=n.createContext({}),u=function(e){var r=n.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},l=function(e){var r=u(e.components);return n.createElement(p.Provider,{value:r},e.children)},c={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=u(t),m=a,f=d["".concat(p,".").concat(m)]||d[m]||c[m]||o;return t?n.createElement(f,i(i({ref:r},l),{},{components:t})):n.createElement(f,i({ref:r},l))}));function m(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=d;var s={};for(var p in r)hasOwnProperty.call(r,p)&&(s[p]=r[p]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=t[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},1556:function(e,r,t){"use strict";t.r(r),t.d(r,{frontMatter:function(){return s},contentTitle:function(){return p},metadata:function(){return u},toc:function(){return l},default:function(){return d}});var n=t(2122),a=t(9756),o=(t(7294),t(3905)),i=["components"],s={sidebar_position:1},p="Python",u={unversionedId:"languages/python",id:"languages/python",isDocsHomePage:!1,title:"Python",description:"parser and variables",source:"@site/docs/languages/python.md",sourceDirName:"languages",slug:"/languages/python",permalink:"/my-website/docs/languages/python",editUrl:"https://github.com/karinaahmedova/docusaurus-website/master/website/docs/languages/python.md",version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Wellcome",permalink:"/my-website/docs/intro"},next:{title:"SQL",permalink:"/my-website/docs/languages/sql"}},l=[{value:"parser and variables",id:"parser-and-variables",children:[]}],c={toc:l};function d(e){var r=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"python"},"Python"),(0,o.kt)("h2",{id:"parser-and-variables"},"parser and variables"),(0,o.kt)("p",null,"This example show how to:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"add date filter to dataframe"),(0,o.kt)("li",{parentName:"ul"},"add path argument using variable of random strings up to 10 charachters")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"import os\nimport argparse\nimport random\nimport string\nfrom pyspark.sql import SparkSession\n\nparser = argparse.ArgumentParser() \nparser.add_argument('-d', required=True, dest='test')\nparser.add_argument('-p', '--person', required=True)\nargs = parser.parse_args()\n\ndate_filter = f\"(date_part >= '{args.test}')\"\nletters= ( ''.join(random.choice(string.ascii_lowercase) for i in range(10)) )\npath = '/tmp/%s/test/%s' % (str(args.person),(letters))\n\nspark = SparkSession.builder.getOrCreate()\n\ndf = spark.sql(f\"\"\"\nselect \nid\n,date_partition\nfrom orc.`/datalake/system/customers/`\nwhere {date_filter}\n\"\"\").persist()\n\ndf.write.format(\"delta\").mode(\"overwrite\").save(path)\n\nprint (\"You can check your sample data in %s\" % (path) ) \n\n")))}d.isMDXComponent=!0}}]);